import * as React from 'react';
import { compose } from 'react-apollo';
import { PlayerContext, withPlayerContext } from './PlayerContext';
import { ActiveBar } from './Components/ActiveBar';
import { PlayToken, Segment } from './Queries/schema';
import { AlbumArt } from './Components/AlbumArt/AlbumArt';
import { TrackProgress } from './Components/TrackProgress/TrackProgress';
import { TrackInfo } from './Components/TrackInfo/TrackInfo';
import { PlayerControls } from './Components/PlayerControls/PlayerControls';
import { Settings } from './Components/PlayerControls/Components/Settings/Settings';
import { Box } from 'grommet';

type Props = PropsFromContext;

export class HorizontalPlayerPresentation extends React.Component<Props> {
  public render() {
    return (
      <Box direction="row" justify="between" fill>
        <Box alignSelf="center" width="280px">
          <Settings />
        </Box>
        <Box flex="grow" pad={{ horizontal: '24px' }}>
          <ActiveBar segment={this.props.activeSegment} />
          <TrackProgress />
          <PlayerControls />
        </Box>
        <Box direction="row" width="280px" align="center">
          <Box width="85px" height="85px" flex={{ shrink: 0 }}>
            <AlbumArt playToken={this.props.playToken} />
          </Box>
          <TrackInfo />
        </Box>
      </Box>
    );
  }
}

interface PropsFromContext {
  playToken: PlayToken | null;
  activeSegment: Segment | null;
}

function mapContextToProps(c: PlayerContext): PropsFromContext {
  return {
    playToken: c.playToken,
    activeSegment: c.activeSegment,
  };
}

export const HorizontalPlayer = compose(withPlayerContext(mapContextToProps))(HorizontalPlayerPresentation);
