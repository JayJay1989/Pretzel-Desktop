/* tslint:disable */
/* eslint-disable */
// @generated
// This file was automatically generated and should not be edited.

// ====================================================
// GraphQL mutation operation: PlayerControlsAppendPlaylist
// ====================================================

export interface PlayerControlsAppendPlaylist_addTrackToPlaylist_playlist_tracks_edges_node_artists {
  __typename: "Artist";
  id: string;
  /**
   * The segment name
   */
  name: string;
}

export interface PlayerControlsAppendPlaylist_addTrackToPlaylist_playlist_tracks_edges_node_album {
  __typename: "Album";
  id: string;
  title: string;
}

export interface PlayerControlsAppendPlaylist_addTrackToPlaylist_playlist_tracks_edges_node_self {
  __typename: "SelfTrack";
  liked: boolean;
  blacklisted: boolean;
}

export interface PlayerControlsAppendPlaylist_addTrackToPlaylist_playlist_tracks_edges_node {
  __typename: "Track";
  id: string;
  title: string;
  duration: number | null;
  artworkGuid: string;
  explicit: boolean | null;
  instrumental: boolean | null;
  youtubeSafe: boolean;
  artists: PlayerControlsAppendPlaylist_addTrackToPlaylist_playlist_tracks_edges_node_artists[];
  album: PlayerControlsAppendPlaylist_addTrackToPlaylist_playlist_tracks_edges_node_album | null;
  self: PlayerControlsAppendPlaylist_addTrackToPlaylist_playlist_tracks_edges_node_self;
}

export interface PlayerControlsAppendPlaylist_addTrackToPlaylist_playlist_tracks_edges {
  __typename: "TrackEdge";
  /**
   * The item at the end of the edge.
   */
  node: PlayerControlsAppendPlaylist_addTrackToPlaylist_playlist_tracks_edges_node | null;
}

export interface PlayerControlsAppendPlaylist_addTrackToPlaylist_playlist_tracks {
  __typename: "TrackConnection";
  /**
   * A list of edges.
   */
  edges: (PlayerControlsAppendPlaylist_addTrackToPlaylist_playlist_tracks_edges | null)[] | null;
}

export interface PlayerControlsAppendPlaylist_addTrackToPlaylist_playlist {
  __typename: "Playlist";
  id: string;
  name: string;
  description: string;
  tracks: PlayerControlsAppendPlaylist_addTrackToPlaylist_playlist_tracks;
}

export interface PlayerControlsAppendPlaylist_addTrackToPlaylist {
  __typename: "AddTrackToPlaylistPayload";
  /**
   * The playlist
   */
  playlist: PlayerControlsAppendPlaylist_addTrackToPlaylist_playlist | null;
  /**
   * Any errors, for example if we are unable to create a Playlist.
   */
  errors: string[];
}

export interface PlayerControlsAppendPlaylist {
  /**
   * Add the provided Track to a playlist that the current user owns.
   */
  addTrackToPlaylist: PlayerControlsAppendPlaylist_addTrackToPlaylist;
}

export interface PlayerControlsAppendPlaylistVariables {
  playlistId: string;
  trackId: string;
}
