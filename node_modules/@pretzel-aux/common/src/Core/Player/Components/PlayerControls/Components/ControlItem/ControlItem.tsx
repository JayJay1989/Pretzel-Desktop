import * as React from 'react';
import {
  LoadingWrapper,
  StyledButton,
  Wrapper,
} from './Styles';
import { ClipLoader } from 'halogenium';
import { CSSProperties } from 'react';
import { Icon, PretzelColors } from '../../../../../../Styled';

interface PublicProps {
  active?: boolean | null;
  play?: boolean;
  style?: CSSProperties;
  name: string;
  isLoading: boolean;
  isDisabled: boolean;
  onClick: (event: React.MouseEvent<HTMLButtonElement>) => void;
}

type Props = PublicProps;

export class ControlItem extends React.Component<Props> {
  public render() {
    return (
      <Wrapper>
        <StyledButton
          active={this.props.active}
          play={this.props.play}
          onClick={this.props.onClick}
          style={this.props.style}
        >
          <Icon name={this.props.name} size={32} isLoading={this.props.isLoading} isDisabled={this.props.isDisabled} />
          {this.props.children}
        </StyledButton>
        {(this.props.isLoading || this.props.isDisabled) && (
          <LoadingWrapper className="loader-fade-in">
            {!this.props.play && !this.props.isDisabled && <ClipLoader color={PretzelColors.brandGreen2} size="16px" />}
          </LoadingWrapper>
        )}
      </Wrapper>
    );
  }
}
