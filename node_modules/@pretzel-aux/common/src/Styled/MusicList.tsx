import * as React from 'react';
import { Box, Heading } from 'grommet';
import { PlaceholderMusicCard } from './PlaceholderMusicCard';
import { ClipLoader } from 'halogenium';
import { LoadMoreButton } from './LoadMoreButton';
import { TileList } from './TileRow';
import { PretzelColors } from './PretzelColors';

interface PublicProps<Thing> {
  title: string;
  items: Thing[] | null;
  hasMore: boolean;
  onMore: () => void;
  loading: boolean;
  circle?: boolean;
}

export class MusicList<Thing> extends React.Component<PublicProps<Thing>> {
  public render() {
    const items = this.props.items === null ? this.renderPlaceholders() : this.props.items;
    return (
      <div style={{ overflow: 'auto', padding: '30px' }}>
        <Heading level="2">{this.props.title}</Heading>
        <TileList gutter={15} tileWidth={160}>
          {items}
        </TileList>
        <Box justify="center" align="center" margin="20px">
          {this.props.hasMore && (
            <LoadMoreButton
              onMore={this.props.onMore}
              loading={this.props.loading} />
          )}
          {this.props.loading && <ClipLoader color={PretzelColors.brandGreen} size="16px" />}
        </Box>
      </div>
    );
  }

  private renderPlaceholders() {
    return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(i => <PlaceholderMusicCard key={i} circle={this.props.circle} />);
  }
}
