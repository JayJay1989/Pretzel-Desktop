import * as React from 'react';
import { Link } from 'react-router-dom';
import { Box } from 'grommet';
import styled from 'styled-components/macro';

import { Square } from './/Aspect';
import { Night } from './SlobsColors';
import { PretzelColors } from './PretzelColors';
import { Icon } from './Icon';

export const Cover = styled.div`
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: radial-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.3));
  border-radius: ${({ circle }: { circle?: boolean }) => (circle ? '50%' : 0)};
`;

export const HoverShow = styled.div`
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  opacity: 0;
  transition: opacity 0.3s;
  display: flex;
  justify-content: center;
  align-items: center;
  text-shadow: 0 0 7px ${PretzelColors.brandGreen};

  &:hover {
    opacity: 1;
  }
`;

interface PublicProps {
  art: React.ReactNode;
  text: React.ReactNode;
  circle?: boolean;
  active?: boolean | null;
  onClick: () => void;
  linkTo?: string;
}

type Props = PublicProps;

export class MusicCard extends React.Component<Props> {
  public render() {
    let textContents = this.props.text;
    if (this.props.linkTo) {
      textContents = <Link to={this.props.linkTo}>{textContents}</Link>;
    }

    return (
      <Box style={{ position: 'relative', cursor: 'default', maxWidth: 240 }}>
        <Square pointer={true} onClick={this.props.onClick}>
          {this.props.art}
          <HoverShow>
            <Cover circle={this.props.circle} />
            {this.props.active ? (
              <Icon color={Night.textTitles} size={60} name="volume_3" />
            ) : (
              <Icon color={Night.textTitles} size={60} name="tracklist_play" />
            )}
          </HoverShow>
        </Square>
        <Box direction="column" flex="grow">
          {textContents}
        </Box>
      </Box>
    );
  }
}
