import * as React from 'react';
import { graphql, QueryControls } from '@apollo/client/react/hoc';
import { flowRight as compose } from 'lodash';
import { FeaturedList } from './Components/Featured/Featured';
import { Box, Heading } from 'grommet';
import { ExternalLink } from '../ExternalLink/ExternalLink';
import { loader } from 'graphql.macro';
import { ReleaseCard } from './Components/ReleaseCard';
import { InfoLinks, ListItems } from './Components/InfoLinks';
import styled from 'styled-components';
import { HomeDataQuery } from './types/HomeDataQuery';
import { PlatformContext, withPlatformContext } from '../../Core/Platform';

const homeDataQuery = loader('./homedata.graphql');

const DISCORD_LINK = `https://discord.gg/XmtkJ4F`;
const FEEDBACK_LINK = `https://feedback.pretzel.rocks/`;

interface GraphqlProps {
  data: QueryControls & HomeDataQuery;
}
type PropsFromPlatform = Pick<PlatformContext, 'features'>;

const HomeNote = styled('p')`
  text-align: center;
  font-size: 18px;
  max-width: 730px;
  min-width: 400px;
`;
type Props = GraphqlProps & PropsFromPlatform;

class HomePresentation extends React.Component<Props, {}> {
  public render() {
    // const featured = this.props.data.loading
    //   ? null
    //   : this.props.data.homeData.featured.map((featuredRelease, idx) => (
    //       <ReleaseCard key={idx} album={featuredRelease} />
    //     ));

    // const gettingStarted = this.props.data.loading
    //   ? null
    //   : this.props.data.homeData.gettingStarted.map((helpItem, id) => (
    //       <ListItems key={id}>
    //         <ExternalLink href={helpItem.url}>{helpItem.name}</ExternalLink>
    //       </ListItems>
    //     ));

    // const comingSoon = this.props.data.loading
    //   ? null
    //   : this.props.data.homeData.comingSoon.map((featureItem, id) => (
    //       <ListItems key={id}>
    //         <ExternalLink href={featureItem.url}>{featureItem.name}</ExternalLink>
    //       </ListItems>
    //     ));
    const downloadEnv = process.env.REACT_APP_CONTEXT === 'production' ? 'prod' : 'staging';
    return (
      <div style={{ overflow: 'auto', padding: '20px', width: '100%' }}>
        <Box align="center">
          <Heading level="2" margin={{ top: '20px', bottom: '30px' }}>
            Welcome to the new Pretzel Rocks!
          </Heading>
          <HomeNote>
            With all of the DMCA takedowns happening in the industry these days, we're proud to provide you with{' '}
            <strong>hundreds of thousands</strong> of licensed tracks for use in your live streams, VODs, and clips.
          </HomeNote>
          <Heading level="3">Pretzel is truly "fully-licensed"</Heading>
          <HomeNote>
            All music in Pretzel is licensed for use in your live streams. We work directly with the record labels,
            publishers, and songwriters that own the music.
            <br />
            <br />
            In over three years, not a single person using Pretzel Rocks has received a DMCA takedown from the music in
            our player. That said, if you ever receive a DMCA takedown notice from any of our music, contact us
            immediately. We have your back.
          </HomeNote>
          {this.props.features.showDesktopDownloads && (
            <>
              <Heading level="3">Get the Desktop Version</Heading>
              <HomeNote>
                Download now:&nbsp;
                <a
                  href={`https://download.pretzel.rocks/PretzelDesktop.exe`}
                  download
                  style={{ textDecoration: 'underline' }}
                >
                  Windows
                </a>
                &nbsp;or&nbsp;
                <a
                  href={`https://download.pretzel.rocks/PretzelDesktop.dmg`}
                  download
                  style={{ textDecoration: 'underline' }}
                >
                  Mac
                </a>
              </HomeNote>
            </>
          )}
          <HomeNote>
            Find a bug or have feedback?&nbsp;
            <ExternalLink href={FEEDBACK_LINK} style={{ textDecoration: 'underline' }}>
              Submit it here
            </ExternalLink>
            .
          </HomeNote>
        </Box>
        <Box align="center" margin={{ top: '0px' }}>
          <p style={{ fontSize: 32, margin: '0px 0px 4px 0px' }}>
            <ExternalLink href={DISCORD_LINK}>
              <i className="pretzel-icon-discord" />
            </ExternalLink>
          </p>
          <Heading level="5" margin={{ top: '0px', bottom: '4px' }}>
            If you need any help at all, please join our Discord
          </Heading>
          <p style={{ fontSize: 11 }}>be nice to Rini</p>
        </Box>
      </div>
    );
  }
}

function mapPlatformToProps(c: PlatformContext): PropsFromPlatform {
  return {
    features: c.features,
  };
}

export const Home = compose(
  graphql(homeDataQuery),
  withPlatformContext<PropsFromPlatform>(mapPlatformToProps),
)(HomePresentation);
