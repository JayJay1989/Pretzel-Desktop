import * as React from 'react';
import { compose } from 'react-apollo';
import { Box, Image, Text } from 'grommet';
import { FeaturedAlbum } from '../schema';
import { PlayerContext, withPlayerContext } from '../../../Core/Player/PlayerContext';
import { ArtworkSize, minutesOrHours, toUrl } from '../../../Util';
import { MusicCard, Night } from '../../../Styled';

type PropsFromPlayer = Pick<PlayerContext, 'playSegment' | 'activeSegment'>;

interface PublicProps {
  album: FeaturedAlbum;
}

type Props = PublicProps & PropsFromPlayer;

export class AlbumCardPresentation extends React.Component<Props> {
  public render() {
    const { album, activeSegment } = this.props;
    const isPlaying = activeSegment && activeSegment.id === album.id;
    const art = <Image src={toUrl(album.artworkGuid, ArtworkSize.Medium)} width="100%"/>;
    const text = (
      <>
        <Text color={Night.textTitles}>{album.name}</Text>
        <Text size="xsmall">{album.artists}</Text>
        <Box flex="grow" justify="end">
          <Text size="10px" color={Night.textMuted} margin={{ top: '16px' }} align-self="end">
            {album.stats.totalCount} Songs&nbsp;&nbsp;&nbsp;â€¢&nbsp;&nbsp;&nbsp;{minutesOrHours(album.stats.duration)}
          </Text>
        </Box>
      </>
    );
    return <MusicCard art={art} text={text} active={isPlaying} onClick={this.handleClick} />;
  }
  private handleClick = () => {
    this.props.playSegment({ id: this.props.album.id });
  };
}

function mapContextToProps(c: PlayerContext): PropsFromPlayer {
  return {
    activeSegment: c.activeSegment,
    playSegment: c.playSegment,
  };
}

export const ReleaseCard = compose(withPlayerContext(mapContextToProps))(AlbumCardPresentation);
