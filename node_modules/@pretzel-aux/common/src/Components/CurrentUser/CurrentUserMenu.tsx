import * as React from 'react';
import { graphql, QueryControls } from '@apollo/client/react/hoc';
import { flowRight as compose } from 'lodash';
import { Box, Text } from 'grommet';
import { RouteComponentProps, withRouter } from 'react-router';
import { loader } from 'graphql.macro';
import { Avatar, Icon } from '../../Styled';
import { ButtonBox } from './Styles';
import { CurrentUser_CurrentUserQuery } from './types/CurrentUser_CurrentUserQuery';
const currentUserQuery = loader('./currentUser.graphql');

interface GraphQLProps {
  data: QueryControls & CurrentUser_CurrentUserQuery;
}

type Props = GraphQLProps & RouteComponentProps<{}>;

class CurrentUserMenuPresentation extends React.Component<Props> {
  state = {};

  public render() {
    if (this.props.data.currentUser) {
      return (
        <ButtonBox
          direction="row"
          justify="between"
          align="center"
          onClick={this.handleUserClicked}
          border="top"
          pad={{ left: 'small', right: 'xsmall', vertical: 'small' }}
          focusIndicator={false}
        >
          <Avatar size={32} src={this.props.data.currentUser.avatar} />
          <Box flex="grow" pad={{ horizontal: 'xsmall' }}>
            <Text size="xsmall">{this.props.data.currentUser.displayName}</Text>
          </Box>
          <span>
            <Icon name="settings" size={24} />
          </span>
        </ButtonBox>
      );
    }
    return null;
  }

  private handleUserClicked = () => {
    this.props.history.push('/settings');
  };
}

export const CurrentUserMenu: React.ComponentClass = compose(
  withRouter,
  graphql(currentUserQuery),
)(CurrentUserMenuPresentation);
