import * as React from 'react';
import { Artist } from '../schema';
import { Hit } from 'react-instantsearch-core';
import aa from 'search-insights';
import { Image, Text } from 'grommet';
import { flowRight as compose } from 'lodash';
import { PlayerContext, withPlayerContext } from '../../../Core/Player/PlayerContext';
import { toUrl } from '../../../Util';
import { MusicCard, Night } from '../../../Styled';

interface PublicProps {
  hit: Hit<Artist>;
}

type PropsFromPlayer = Pick<PlayerContext, 'playSegment'>;

type Props = PublicProps & PropsFromPlayer;

export class ArtistHitImplementation extends React.Component<Props> {
  public render() {
    const { hit } = this.props;
    const art = <Image src={toUrl(hit.artwork_guid)} width="100%" style={{ borderRadius: '50%' }} />;
    const text = (
      <>
        <Text color={Night.textTitles}>{hit.name}</Text>
      </>
    );
    return <MusicCard art={art} text={text} onClick={this.handleClick} linkTo={`/segment/${hit.guid}`} />;
  }

  private handleClick = () => {
    this.props.playSegment({ id: this.props.hit.guid });
    // @ts-ignore The __queryID and __position properties of hit are not listed in the types but they exist
    const { objectID, __queryID: queryID, __position: position} = this.props.hit;
    aa('click', { objectID, queryID, position });
  };
}

function mapContextToProps(c: PlayerContext): PropsFromPlayer {
  return {
    playSegment: c.playSegment,
  };
}
export const ArtistHit = compose(withPlayerContext(mapContextToProps))(ArtistHitImplementation);
