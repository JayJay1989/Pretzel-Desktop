import * as React from 'react';

import { Artist } from '../schema';
import { Hit } from 'react-instantsearch-core';
import { Image, Text } from "grommet";
import { compose } from "react-apollo";
import { PlayerContext, withPlayerContext } from '../../../Core/Player/PlayerContext';
import { toUrl } from '../../../Util';
import { MusicCard, Night } from '../../../Styled';

interface PublicProps {
  hit: Hit<Artist>;
}

type PropsFromPlayer = Pick<PlayerContext, 'playSegment'>;

type Props = PublicProps & PropsFromPlayer

export class ArtistHitImplementation extends React.Component<Props> {
  public render() {
    const { hit } = this.props
    const art = <Image src={toUrl(hit.artwork_guid)} width="100%" style={{ borderRadius: '50%' }} />
    const text = (
      <>
        <Text color={Night.textTitles}>{hit.name}</Text>
      </>
    )
    return <MusicCard art={art} text={text} onClick={this.handleClick} />
    // return <MusicCard art={art} text={text} onClick={this.handleClick} linkTo={`/segment/${hit.guid}`} />
  }

  private handleClick = () => {
    this.props.playSegment({ id: this.props.hit.guid });
  }
}

function mapContextToProps(c: PlayerContext): PropsFromPlayer {
  return {
    playSegment: c.playSegment,
  };
}
export const ArtistHit = compose(withPlayerContext(mapContextToProps))(ArtistHitImplementation);
