import * as React from 'react';
import { flowRight as compose } from 'lodash';
import { Box, Text, Image } from 'grommet';
import { PlayerContext, withPlayerContext } from '../../../Core/Player/PlayerContext';
import { ArtworkSize, minutesOrHours, toUrl } from '../../../Util';
import { MusicCard, Night } from '../../../Styled';
import { ArtistsListQuery_artists_edges_node } from '../types/ArtistsListQuery';

type PropsFromPlayer = Pick<PlayerContext, 'playSegment' | 'activeSegment'>;

interface PublicProps {
  artist: ArtistsListQuery_artists_edges_node;
}

type Props = PublicProps & PropsFromPlayer;

export class ArtistCardPresentation extends React.Component<Props> {
  public render() {
    const { artist, activeSegment } = this.props;
    const isPlaying = activeSegment && activeSegment.id === artist.id;
    const art = (
      <Image
        fit="cover"
        src={toUrl(artist.artworkGuid, ArtworkSize.Medium)}
        style={{ borderRadius: '50%' }}
        width="100%"
      />
    );
    const text = (
      <>
        <Text color={Night.textTitles}>{artist.name}</Text>
        <Box flex="grow" justify="end">
          <Text size="10px" color={Night.textMuted} margin={{ top: '16px' }} align-self="end">
            {artist.stats.totalCount} Songs&nbsp;&nbsp;&nbsp;â€¢&nbsp;&nbsp;&nbsp;{minutesOrHours(artist.stats.duration)}
          </Text>
        </Box>
      </>
    );
    return (
      <MusicCard
        art={art}
        text={text}
        circle={true}
        active={isPlaying}
        onClick={this.handleClick}
        linkTo={`/segment/${artist.id}`}
      />
    );
  }
  private handleClick = () => {
    this.props.playSegment({ id: this.props.artist.id });
  };
}

function mapContextToProps(c: PlayerContext): PropsFromPlayer {
  return {
    activeSegment: c.activeSegment,
    playSegment: c.playSegment,
  };
}

export const ArtistCard = compose(withPlayerContext(mapContextToProps))(ArtistCardPresentation);
