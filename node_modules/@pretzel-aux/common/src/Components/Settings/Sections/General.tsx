import * as React from 'react';
import { flowRight as compose } from 'lodash';
import { SettingsSection } from '../Components/SettingsSection';
import { CheckboxOption } from '../Components/CheckboxOption/CheckboxOption';
import { SettingsContext, withSettingsContext } from '../../../Core/Settings/Settings';
import { PlatformContext, withPlatformContext } from '../../../Core/Platform';
import styled from 'styled-components/macro';
import { PretzelColors } from '../../../Styled';

interface PublicProps {}
type PropsFromPlatform = Pick<PlatformContext, 'saveData'>;

interface PropsFromContext {
  dailyAffirmations: boolean;
  setDailyAffirmations: (value: boolean) => void;
}

type Props = PublicProps & PropsFromContext & PropsFromPlatform;

interface State {}
export const GeneralText = styled.p`
  color: ${PretzelColors.baseWhite};
  font-size: 14px;
  margin-bottom: 5px;
  user-select: text;
`;

export class GeneralPresentation extends React.Component<Props, State> {
  state = {};

  public render() {
    return (
      <SettingsSection title="General">
        <CheckboxOption
          label="Show Daily Affirmations"
          onChange={this.onAffirmationsChanged}
          value={this.props.dailyAffirmations}
        />
      </SettingsSection>
    );
  }

  private onAffirmationsChanged = (value: boolean) => {
    this.props.setDailyAffirmations(value);
  };
}

function mapContextToProps(c: SettingsContext): PropsFromContext {
  return {
    dailyAffirmations: c.dailyAffirmations,
    setDailyAffirmations: c.setDailyAffirmations,
  };
}

function mapPlatformToProps(c: PlatformContext): PropsFromPlatform {
  return {
    saveData: c.saveData,
  };
}

export const General = compose(
  withPlatformContext(mapPlatformToProps),
  withSettingsContext(mapContextToProps),
)(GeneralPresentation);
