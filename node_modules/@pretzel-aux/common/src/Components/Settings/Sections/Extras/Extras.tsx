import * as React from "react";
import {flowRight as compose} from "lodash";
import {AudioOutputSelectorPresentation} from "../Audio/Components/AudioOutputSelector/AudioOutputSelector";
import { PlatformContext, withPlatformContext } from '@pretzel-aux/common/src/Core/Platform';
import {Box, Button} from "grommet";

type PropsFromPlatformContext = Pick<PlatformContext, 'setPretzelUser' | 'pretzelUser'>;

type Props = PropsFromPlatformContext;

interface State {
  isOpen: boolean
}

export class ExtrasPresentation extends React.Component<Props, State> {
  state = {
    isOpen: false,
  };

  altCount = 0;

  componentDidMount() {
    document.addEventListener('keydown', (e) => {
      if (e.altKey) {
        this.altCount++;
        if (this.altCount > 10) {
          this.setState({isOpen: true});
          console.log('Extra Info!', this.props.pretzelUser);
        }
      } else {
        this.altCount = 0;
      }
    })
  }

  public render() {
    if (!this.state.isOpen) {
      return null
    }

    const isPremium = this.props.pretzelUser && this.props.pretzelUser.premium;

    return (
      <Box width='medium' pad='medium' style={{ overflow: 'auto' }}>
        <h1>You Found Extras!</h1>
        { isPremium &&
          <Button
            style={{ color: 'white' }}
            size="small"
            plain={false}
            primary={true}
            color="control"
            onClick={this.forceBasic}
          >
            Temporary Downgrade
          </Button>
        }
      </Box>
    );
  }

  private forceBasic = () => {
    const user = { ...this.props.pretzelUser, premium: false };
    this.props.setPretzelUser(user);
  }
}

function mapContextToProps(c: PlatformContext): PropsFromPlatformContext {
  return {
    pretzelUser: c.pretzelUser,
    setPretzelUser: c.setPretzelUser,
  };
}

export const Extras = compose(withPlatformContext<PropsFromPlatformContext>(mapContextToProps))(ExtrasPresentation);
