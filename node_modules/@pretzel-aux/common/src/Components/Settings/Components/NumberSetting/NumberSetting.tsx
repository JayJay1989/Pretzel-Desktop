import * as React from 'react';
import {
  InputWrapper,
  NumberInput,
  SelectorWrapper,
  Title,
  Wrapper,
} from './Styles';
import { PretzelColors } from '../../../../Styled';

interface PublicProps {
  title: string;
  min: number;
  max: number;
  value: number;
  onChange: (value: number | null) => void;
  units: string;
  pattern: any;
}

type Props = PublicProps;

export class NumberSettingPresentation extends React.Component<Props> {
  state = {};

  public render() {
    return (
      <Wrapper>
        <Title>{this.props.title}</Title>
        <SelectorWrapper>
          <InputWrapper className="no-drag">
            <NumberInput
              // readOnly
              min={this.props.min || 0}
              max={this.props.max}
              value={this.props.value}
              onChange={this.props.onChange}
              format={num => `${num} ${this.props.units}`}
              pattern={this.props.pattern}
              inputMode="numeric"
              strict
              snap
              style={{
                wrap: {
                  width: '100%',
                },
                'input:not(.form-control)': {
                  paddingLeft: 10,
                },
                arrowUp: {
                  borderBottomColor: PretzelColors.baseWhite,
                },
                arrowDown: {
                  borderTopColor: PretzelColors.baseWhite,
                },
                btn: {
                  cursor: 'pointer',
                  // @ts-ignore
                  WebkitAppRegion: 'no-drag',
                  background: 'transparent',
                  boxShadow: 'none',
                },
                'btn:active': {
                  boxShadow: 'none',
                },
                input: {
                  color: 'transparent',
                  textShadow: '0 0 0 #fff',
                },
              }}
            />
          </InputWrapper>
        </SelectorWrapper>
      </Wrapper>
    );
  }
}

export const NumberSetting = NumberSettingPresentation;
